#!/bin/sh
# @author ojourmel

LIBRARYPATH=/srv/data
PROJECTROOT=.
LIBRARYROOT=/srv/data/ # Where the library will be mounted on the data container


##### # Select the API (backend) implementation
BACKEND=omp-express-mongo-api

##### # Select the frontend implementation
FRONTEND=omp-riot-ui

## Verify code is here - updating is your responsibility
## If you want ssl copies of the repo, clone them yourself
if [ ! -d $BACKEND ] ; then
    echo "!^!^!^!"
    echo "WARNING: Cloning a HTTPS copy of $BACKEND"
    echo "!^!^!^!"
    git clone https://github.com/OpenMediaPortal/$BACKEND $PROJECTROOT/$BACKEND
fi

if [ ! -d $FRONTEND ] ; then
    echo "!^!^!^!"
    echo "WARNING: Cloning a HTTPS copy of $FRONTEND"
    echo "!^!^!^!"
    git clone https://github.com/OpenMediaPortal/$FRONTEND $PROJECTROOT/$FRONTEND
fi



#### # Dynamically build the docker-compose file
DOCKERCOMPOSE="docker-compose.yml"
if [ -f $DOCKERCOMPOSE ] ; then
    mv $DOCKERCOMPOSE $DOCKERCOMPOSE.bck
fi
touch $DOCKERCOMPOSE

## Add the data docker container
cat >> $DOCKERCOMPOSE << EOL
omp-data:
    image: alpine
    volumes:
        - $LIBRARYPATH:$LIBRARYROOT:rw
    entrypoint: /bin/sh

EOL

if [ $BACKEND = "omp-express-mongo-api" ] ; then
cat >> $DOCKERCOMPOSE << EOL

omp-express-mongo-api:
    build: $PROJECTROOT/omp-express-mongo-api
    working_dir: /omp
    volumes:
        - $PROJECTROOT/omp-express-mongo-api/package.json:/omp/package.json:rw
        - $PROJECTROOT/omp-express-mongo-api/server.js:/omp/server.js:rw
        - $PROJECTROOT/omp-express-mongo-api/routes/:/omp/routes/:rw
        - $PROJECTROOT/omp-express-mongo-api/dao/:/omp/dao/:rw
    volumes_from:
        - omp-data
    environment:
        LIBRARY_ROOT: $LIBRARYROOT
        NODE_ENV: development
    ports:
        - "8001:8001"
    links:
        - omp-mongo
    command: npm start

omp-mongo:
    image: mongo
    volumes:
        - $PROJECTROOT/omp-express-mongo-api/data/:/data/db/:rw
    expose:
        - "27017"
    command: --smallfiles

EOL
fi

if [ $FRONTEND = "omp-riot-ui" ] ; then
cat >> $DOCKERCOMPOSE << EOL

omp-mongoose-server:
    build: $PROJECTROOT/mongoose
    working_dir: /omp
    volumes:
        - $PROJECTROOT/omp-riot-ui/:/omp/omp-riot-ui/:ro
    environment:
        DOCUMENTROOT: $FRONTEND/static
    ports:
        - "8000:8000"
    command: ./mongoose/server

EOL
fi

